/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    combos {
        compatible = "zmk,combos";

        goToLayer3 {
            bindings = <&to 3>;
            key-positions = <38 39>;
        };

        caps_lock {
            bindings = <&caps_lock>;
            key-positions = <12 35>;
        };
    };

    behaviors {
        caps_lock: caps_lock {
            compatible = "zmk,behavior-tap-dance";
            label = "CAPS_LOCK";
            #binding-cells = <0>;
            bindings = <&kp LEFT_SHIFT>, <&kp LEFT_SHIFT>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB           &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y      &kp U  &kp I         &kp O    &kp P             &kp BSPC
&kp LEFT_SHIFT    &kp A  &kp S  &kp D     &kp F  &kp G        &kp H      &kp J  &kp K         &kp L    &kp SEMI          &kp SQT
&kp LEFT_CONTROL  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N      &kp M  &kp COMMA     &kp DOT  &kp LEFT_BRACKET  &kp ESC
                                &kp LGUI  &to 0  &kp SPACE    &kp ENTER  &to 1  &kp LEFT_ALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp LS(NUMBER_1)  &kp LS(MINUS)  &kp RA(Q)   &kp LS(NUMBER_4)  &kp NON_US_BACKSLASH        &kp SLASH   &kp RIGHT_BRACKET  &kp UP_ARROW    &kp LS(NUMBER_6)  &kp EQUAL              &trans
&trans  &kp RA(MINUS)     &kp LS(N2)     &kp LS(N7)  &kp LS(N0)        &kp LS(NON_US_BACKSLASH)    &kp MINUS   &kp LEFT_ARROW     &kp DOWN_ARROW  &kp RIGHT         &kp RA(RIGHT_BRACKET)  &kp DELETE
&trans  &kp RA(NUBS)      &kp RA(N8)     &kp RA(N9)  &kp HOME          &kp END                     &kp LS(N8)  &kp LS(N9)         &kp RA(N7)      &kp RA(N0)        &kp PIPE               &trans
                                         &trans      &trans            &trans                      &trans      &to 2              &trans
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&trans  &kp N1      &kp N2      &kp N3            &kp N4      &kp N5        &kp N6      &kp N7        &kp N8     &kp N9           &kp N0     &trans
&trans  &none       &none       &none             &none       &none         &kp K_MUTE  &kp C_VOL_DN  &none      &kp C_VOLUME_UP  &kp BSLH   &kp RIGHT_BRACKET
&trans  &kp LS(N5)  &kp LS(N4)  &kp K_PLAY_PAUSE  &kp K_PREV  &kp K_NEXT    &kp RA(E)   &none         &kp COMMA  &kp PERIOD       &kp SLASH  &trans
                                &trans            &trans      &trans        &to 1       &trans        &trans
            >;
        };

        layer_3 {
            bindings = <
&bt BT_CLR  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
&trans      &trans        &trans        &trans        &trans        &trans          &trans  &trans  &trans  &trans  &trans  &trans
                                        &trans        &trans        &trans          &trans  &trans  &trans
            >;
        };
    };
};
